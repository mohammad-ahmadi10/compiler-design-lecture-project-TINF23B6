Compiling with own parser...
[main] java.lang.RuntimeException: wrong number of argument Type provided: TYPE_STRING
	at com.auberer.compilerdesignlectureproject.sema.FunctionTableEntry.validateArgs(FunctionTableEntry.java)
	at com.auberer.compilerdesignlectureproject.sema.TypeChecker.visitArgLst(TypeChecker.java)
	at com.auberer.compilerdesignlectureproject.sema.TypeChecker.visitArgLst(TypeChecker.java)
	at com.auberer.compilerdesignlectureproject.ast.ASTArgLstNode.accept(ASTArgLstNode.java)
	at com.auberer.compilerdesignlectureproject.ast.ASTVisitor.visitChildren(ASTVisitor.java)
	at com.auberer.compilerdesignlectureproject.sema.TypeChecker.visitFunctionCall(TypeChecker.java)
	at com.auberer.compilerdesignlectureproject.sema.TypeChecker.visitFunctionCall(TypeChecker.java)
	at com.auberer.compilerdesignlectureproject.ast.ASTFunctionCallNode.accept(ASTFunctionCallNode.java)
	at com.auberer.compilerdesignlectureproject.ast.ASTVisitor.visit(ASTVisitor.java)
	at com.auberer.compilerdesignlectureproject.sema.TypeChecker.visitAtomicExpr(TypeChecker.java)
	at com.auberer.compilerdesignlectureproject.sema.TypeChecker.visitAtomicExpr(TypeChecker.java)
	at com.auberer.compilerdesignlectureproject.ast.ASTAtomicExprNode.accept(ASTAtomicExprNode.java)
	at com.auberer.compilerdesignlectureproject.ast.ASTVisitor.visit(ASTVisitor.java)
	at com.auberer.compilerdesignlectureproject.sema.TypeChecker.visitMultiplicativeExpr(TypeChecker.java)
	at com.auberer.compilerdesignlectureproject.sema.TypeChecker.visitMultiplicativeExpr(TypeChecker.java)
	at com.auberer.compilerdesignlectureproject.ast.ASTMultiplicativeExprNode.accept(ASTMultiplicativeExprNode.java)
	at com.auberer.compilerdesignlectureproject.ast.ASTVisitor.visit(ASTVisitor.java)
	at com.auberer.compilerdesignlectureproject.sema.TypeChecker.visitAdditiveExpr(TypeChecker.java)
	at com.auberer.compilerdesignlectureproject.sema.TypeChecker.visitAdditiveExpr(TypeChecker.java)
	at com.auberer.compilerdesignlectureproject.ast.ASTAdditiveExprNode.accept(ASTAdditiveExprNode.java)
	at com.auberer.compilerdesignlectureproject.ast.ASTVisitor.visit(ASTVisitor.java)
	at com.auberer.compilerdesignlectureproject.sema.TypeChecker.visitEqualityExpr(TypeChecker.java)
	at com.auberer.compilerdesignlectureproject.sema.TypeChecker.visitEqualityExpr(TypeChecker.java)
	at com.auberer.compilerdesignlectureproject.ast.ASTEqualityExprNode.accept(ASTEqualityExprNode.java)
	at com.auberer.compilerdesignlectureproject.ast.ASTVisitor.visit(ASTVisitor.java)
	at com.auberer.compilerdesignlectureproject.sema.TypeChecker.visitTernaryExpr(TypeChecker.java)
	at com.auberer.compilerdesignlectureproject.sema.TypeChecker.visitTernaryExpr(TypeChecker.java)
	at com.auberer.compilerdesignlectureproject.ast.ASTTernaryExprNode.accept(ASTTernaryExprNode.java)
	at com.auberer.compilerdesignlectureproject.ast.ASTVisitor.visit(ASTVisitor.java)
	at com.auberer.compilerdesignlectureproject.sema.TypeChecker.visitVarDecl(TypeChecker.java)
	at com.auberer.compilerdesignlectureproject.sema.TypeChecker.visitVarDecl(TypeChecker.java)
	at com.auberer.compilerdesignlectureproject.ast.ASTVarDeclNode.accept(ASTVarDeclNode.java)
	at com.auberer.compilerdesignlectureproject.ast.ASTVisitor.visitChildren(ASTVisitor.java)
	at com.auberer.compilerdesignlectureproject.ast.ASTVisitor.visitStmt(ASTVisitor.java)
	at com.auberer.compilerdesignlectureproject.ast.ASTStmtNode.accept(ASTStmtNode.java)
	at com.auberer.compilerdesignlectureproject.ast.ASTVisitor.visitChildren(ASTVisitor.java)
	at com.auberer.compilerdesignlectureproject.ast.ASTVisitor.visitStmtLst(ASTVisitor.java)
	at com.auberer.compilerdesignlectureproject.ast.ASTStmtLstNode.accept(ASTStmtLstNode.java)
	at com.auberer.compilerdesignlectureproject.ast.ASTVisitor.visit(ASTVisitor.java)
	at com.auberer.compilerdesignlectureproject.sema.TypeChecker.visitFunctionDef(TypeChecker.java)
	at com.auberer.compilerdesignlectureproject.sema.TypeChecker.visitFunctionDef(TypeChecker.java)
	at com.auberer.compilerdesignlectureproject.ast.ASTFunctionDefNode.accept(ASTFunctionDefNode.java)
	at com.auberer.compilerdesignlectureproject.ast.ASTVisitor.visitChildren(ASTVisitor.java)
	at com.auberer.compilerdesignlectureproject.sema.TypeChecker.visitEntry(TypeChecker.java)
	at com.auberer.compilerdesignlectureproject.CompilerDesignLectureProject.main(CompilerDesignLectureProject.java)